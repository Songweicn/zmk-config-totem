#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tvp {
            timeout-ms = <100>;
            key-positions = <11 12 13>;
            bindings = <&tog 0>;
        };

        combo_pgup {
            bindings = <&kp PG_UP>;
            key-positions = <16 17>;
        };

        combo_pgdn {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <18 17>;
        };
    };

    behaviors {
        mt_safe: mt_safe {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_SAFE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };

        td_boot: td_boot {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BOOT";
            #binding-cells = <0>;
            tapping-term-ms = <300>;  // 可自定义双击时限
            bindings = <&bootloader>;
        };

        td_reset: td_reset {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_RESET";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&sys_reset>;
        };

        // USB/BLE 切换行为

        out_usb_ble: out_usb_ble {
            compatible = "zmk,behavior-hold-tap";
            label = "OUT_USB_BLE";
            #binding-cells = <0>;
            tapping-term-ms = <200>; // 可按需调整
            flavor = "tap-preferred";
            bindings = <&out OUT_USB>, <&out OUT_BLE>;
        };

        // Bluetooth profile 0 ~ 3 选择 / 清除
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "BASE";
            bindings = <
          &kp Q                &kp W           &kp F               &kp P        &kp B        &kp J        &kp L            &kp U                &kp Y            &kp SINGLE_QUOTE
          &mt_safe LEFT_WIN A  &mt LEFT_ALT R  &mt LEFT_CONTROL S  &mt LSHFT T  &kp G        &kp M        &mt RSHFT N      &mt RIGHT_CONTROL E  &mt RIGHT_ALT I  &mt_safe RIGHT_GUI O
&kp CAPS  &lt 8 Z              &kp X           &kp C               &kp D        &kp V        &kp K        &kp H            &kp COMMA            &kp DOT          &lt 8 SLASH           &kp SEMICOLON
                                               &lt 4 ESCAPE        &lt 2 SPACE  &lt 3 TAB    &lt 6 ENTER  &lt 5 BACKSPACE  &lt 7 DELETE
            >;
        };

        extra {
            bindings = <
           &kp Q                &kp W           &kp E               &kp R             &kp T     &kp Y   &kp U              &kp I                &kp O            &kp P
           &mt_safe LEFT_WIN A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G     &kp H   &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &mt_safe SEMI O
&kp LSHFT  &lt 8 Z              &kp X           &kp C               &kp V             &kp B     &kp N   &kp M              &kp COMMA            &kp DOT          &lt 8 SLASH      &kp RSHFT
                                                &trans              &trans            &trans    &trans  &trans             &trans
            >;

            label = "extra";
        };

        nav {
            label = "nav";
            bindings = <
        &none         &none          &to 1             &to 0           &none     &kp LC(Y)   &kp LC(V)       &kp LC(C)       &kp LC(X)     &kp LC(Z)
        &sk LEFT_GUI  &sk LEFT_ALT   &sk LEFT_CONTROL  &sk LEFT_SHIFT  &none     &kp CAPS    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW
&trans  &none         &sk RIGHT_ALT  &to 5             &tog 2          &none     &kp INSERT  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans
                                     &trans            &trans          &trans    &trans      &trans          &trans
            >;
        };

        mouse {
            label = "mouse";
            bindings = <
        &none         &none          &to 1             &to 0           &none     &kp LC(Y)   &kp LC(V)       &kp LC(C)       &kp LC(X)     &kp LC(Z)
        &sk LEFT_GUI  &sk LEFT_ALT   &sk LEFT_CONTROL  &sk LEFT_SHIFT  &none     &kp CAPS    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW
&trans  &none         &sk RIGHT_ALT  &to 6             &tog 3          &none     &kp INSERT  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &trans
                                     &trans            &trans          &trans    &trans      &trans          &trans
            >;
        };

        media {
            bindings = <
        &td_boot      &td_reset      &to 1             &to 0           &none    &kp LC(Y)                     &kp LC(V)         &kp LC(C)          &kp LC(X)        &kp LC(Z)
        &sk LEFT_WIN  &sk LEFT_ALT   &sk LEFT_CONTROL  &sk LEFT_SHIFT  &none    &out_usb_ble OUT_BLE OUT_USB  &kp C_PREVIOUS    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kt C_NEXT
&trans  &none         &sk RIGHT_ALT  &to 7             &tog 4          &none    &bt BT_CLR                    &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &trans
                                     &trans            &none           &none    &kp K_STOP                    &kp K_PLAY_PAUSE  &kp C_MUTE
            >;

            label = "media";
        };

        num {
            label = "num";
            bindings = <
       &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET    &none  &to 0           &to 1             &none          &none
       &kp SEMICOLON     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL            &none  &sk LEFT_SHIFT  &sk LEFT_CONTROL  &sk LEFT_ALT   &sk LEFT_WIN
&none  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH        &none  &tog 5          &to 2             &sk RIGHT_ALT  &none         &none
                                       &kp PERIOD    &kp NUMBER_0  &kp MINUS            &none  &trans          &none
            >;
        };

        sym {
            label = "sym";
            bindings = <
       &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &none   &to 0           &to 1             &none          &none
       &kp COLON       &kp DOLLAR       &kp PERCENT           &kp LCTRL              &kp PLUS           &none   &sk LEFT_SHIFT  &sk LEFT_CONTROL  &sk LEFT_ALT   &sk LEFT_GUI
&none  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp POUND              &kp PIPE           &none   &tog 6          &to 3             &sk RIGHT_ALT  &none         &none
                                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &trans  &none           &none
            >;
        };

        fun {
            label = "FUN";
            bindings = <
        &kp F12  &kp F7  &kp F8      &kp F9     &kp SCROLLLOCK     &none  &to 0           &to 1             &td_reset      &td_boot
        &kp F11  &kp F4  &kp F5      &kp F6     &kp SCROLLLOCK     &none  &sk LEFT_SHIFT  &sk LEFT_CONTROL  &sk LEFT_ALT   &sk LEFT_GUI
&trans  &kp F10  &kp F1  &kp F2      &kp F3     &kp PAUSE_BREAK    &none  &tog 7          &to 4             &sk RIGHT_ALT  &none         &trans
                         &kp ESCAPE  &kp SPACE  &kp TAB            &none  &none           &trans
            >;
        };

        button {
            bindings = <
        &kp LC(Z)     &kp LC(X)     &kp LC(C)         &kp LC(V)       &kp LC(Y)    &kp LC(Y)  &kp LC(V)        &kp LC(C)          &kp LC(X)      &kp LC(Z)
        &sk LEFT_GUI  &sk LEFT_ALT  &sk LEFT_CONTROL  &sk LEFT_SHIFT  &none        &none      &sk RIGHT_SHIFT  &sk RIGHT_CONTROL  &sk RIGHT_ALT  &sk RIGHT_GUI
&trans  &kp LC(Z)     &kp LC(X)     &kp LC(C)         &kp LC(V)       &kp LC(Y)    &kp LC(Y)  &kt LC(V)        &kp LC(C)          &kp LC(X)      &kp LC(Z)      &trans
                                    &mkp MCLK         &mkp LCLK       &mkp RCLK    &mkp RCLK  &mkp LCLK        &mkp MCLK
            >;

            label = "button";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
